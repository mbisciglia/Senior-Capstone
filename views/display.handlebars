<!DOCTYPE html>
<html>
<style>
    #mydiv {
        position: relative;
        z-index: 9;
        text-align: center;
        border: 3px solid #ebdd17;
        background-color: orange;
        resize: both;
        overflow: auto;
        opacity: 0.7;
    }

    #mydivheader {
        padding: 10px;
        cursor: move;
        z-index: 10;
        background-color: rgba(47, 255, 20, 0.5);
        color: black;
    }
</style>

<body>
    <div class="container-fluid">
        <div class="row">
            <div class="col-md-2">
                <select id="floorList" style="margin-bottom: 1em"></select>
            </div>
            <div class="col-md-10">
                <div id="testContainer" class="testContainer" style="
				  position: absolute;
				  width: 55vw;
				  height:100%;
				  ">
                    <img id="img" alt="Bootstrap Image Preview" style="position:absolute"
                        src="https://i.redd.it/uo0u67glvlq01.jpg" />

                </div>
            </div>
        </div>
    </div>
    </div>
</body>

</html>

<script>
    (() => {
        document.getElementById("floorList").addEventListener("change", function () {
            loadFloor(this.value);
        });
    })();



    function recreateDivs() {
        //var imgDiv = document.getElementById("testContainer");
        //var testDiv = document.createElement("div");
        //imgDiv.appendChild(testDiv);
/*
        testDiv.style.top = selectedArea.style.top;
        testDiv.style.left = selectedArea.style.left;
        testDiv.style.height = selectedArea.style.height;
        testDiv.style.width = selectedArea.style.width;
        testDiv.style.backgroundColor = "green";
        testDiv.style.opacity = "0.6";
        testDiv.style.position = "absolute";


        selectedArea.style.display = "none";
        selectedArea.style.top = 0;
        selectedArea.style.left = 0;
        selectedArea.style.height = "200px";
        selectedArea.style.width = "250px";


        var acc = getCookie("uid");
        var floor = document.getElementById("floorList").value;
        var top = testDiv.style.top;
        var left = testDiv.style.left;
        var height = testDiv.style.height;
        var width = testDiv.style.width;

        var db = firebase.database();
        var dbref = db.ref(acc + "/images/" + "floorData/" + floor + "/");
        dbref.push({ top: top, left: left, height: height, width: width });
*/

        //var db = firebase.database();
        //var dbref = db.ref(acc + )
    }



    function loadFloor(floorName) {
        console.log(`Loading ${floorName}`);
        var storageRef = firebase.storage().ref();
        var acc = getCookie("uid");
        var ref = storageRef.child(acc + "/" + floorName);
        ref
            .getDownloadURL()
            .then(function (url) {
                // `url` is the download URL for 'images/stars.jpg'

                // This can be downloaded directly:
                var xhr = new XMLHttpRequest();
                xhr.responseType = "blob";
                xhr.onload = function (event) {
                    var blob = xhr.response;
                };
                xhr.open("GET", url);
                xhr.send();

                // Or inserted into an <img> element:
                var img = document.getElementById("img");
                img.src = url;
            })
            .catch(function (error) {
                console.log(error);
                console.log("there was an error getting images");
            });
    }

    loadFloorNames();

    function fetchNames() {
        var names = [];

        var isFirst = true;
        return new Promise((resolve, reject) => {
            var acc = getCookie("uid");

            db = firebase.database().ref(acc + "/images/" + "floors/");
            db.on("value", function (snapshot) {
                snapshot.forEach(function (childSnapshot) {
                    var childData = childSnapshot.val();

                    if (isFirst) {
                        isFirst = false;
                        loadFloor(childData.name);
                    }

                    //console.log(childData);
                    names.push(childData.name);
                });

                resolve(names);
            });
        });
    }

    function loadFloorNames() {
        var list = document.getElementById("floorList");
        //var list2 = document.getElementById("floorDropdown");

        fetchNames()
            .then(names => {
                console.log("Promise result", names);
                for (var i = 0, l = names.length; i < l; i++) {
                    var option = document.createElement("option");
                    option.text = names[i];
                    list.add(option);
                    //list2.add(option);
                    //console.log("bazzanngga");
                }
            })
            .catch(err => {
                console.error(err);
            });
    }
</script>