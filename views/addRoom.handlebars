<!DOCTYPE html>
<html>
  <style>
    #addRoomDiv {
      position: absolute;
      z-index: 9;
      text-align: center;
      border: 3px solid #ebdd17;
      background-color: orange;
      resize: both;
      overflow: auto;
      opacity: 0.7;
    }

    #mydivheader {
      padding: 10px;
      cursor: move;
      z-index: 10;
      background-color: rgba(47, 255, 20, 0.5);
      color: black;
    }
  </style>

  <body>
    <div class="container-fluid">
      <div class="row">
        <div class="col-md-2">
          <select id="floorList" style="margin-bottom: 1em"></select>
          <button
            type="button"
            id="addRoomBTN"
            class="btn btn-success"
            style="margin-bottom: 1em"
          >
            Add Room
          </button>

          <div class="form-group">
            <label for="addfloor">
              Room Number
            </label>
            <input class="form-control" id="roomNum" />
          </div>

          <button
            type="button"
            id="confRoomBTN"
            class="btn btn-success"
            style="margin-bottom: 1em"
          >
            Confirm Room
          </button>
          <button
            type="button"
            id="confFloorBTN"
            class="btn btn-success"
            style="margin-bottom: 1em"
          >
            Confirm Floor
          </button>
        </div>
        <div class="col-md-10">
          <div id="mapContainer">
            <img
              id="mapImg"
              alt="Bootstrap Image Preview"
              src="https://i.redd.it/uo0u67glvlq01.jpg"
            />

            <div id="addRoomDiv">
              <div id="mydivheader">Click here to move</div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </body>
</html>

<script>
  (() => {
    document.getElementById("floorList").addEventListener("change", function() {
      loadFloor(this.value);
    });
  })();

  document.getElementById("confFloorBTN").addEventListener("click", function() {
    window.location = "display";
  });

  document.getElementById("addRoomBTN").addEventListener("click", function() {
    var ele = document.getElementById("addRoomDiv");
    if (ele.classList.contains("vis")) {
      console.log("div already created");
      ele.classList.remove("vis");
    } else {
      ele.classList.add("vis");
      ele.style.top = "0";
      ele.style.left = "0";
      ele.style.height = "30%";
      ele.style.width = "30%";
    }
  });

  document.getElementById("confRoomBTN").addEventListener("click", function() {
    var selectedArea = document.getElementById("addRoomDiv");
    var roomNum = document.getElementById("roomNum");

    if (selectedArea.style.display == "none") {
      alert("Please first select your region with the add room button");
    } else if (roomNum.value == "") {
      alert("Please first enter in a room number");
    } else {
      //TODO: make look like Display
      var imgDiv = document.getElementById("mapContainer");
      var mapDiv = document.createElement("div");
      imgDiv.appendChild(mapDiv);

      var t = document.createTextNode(roomNum.value);

      mapDiv.appendChild(t);
      mapDiv.style.textAlign = "center";
      mapDiv.style.verticalAlign = "middle";
      mapDiv.style.lineHeight = selectedArea.style.height;
      mapDiv.style.fontSize = "200%";
      mapDiv.style.color = "yellow";

      mapDiv.style.top = selectedArea.style.top;
      mapDiv.style.left = selectedArea.style.left;
      mapDiv.style.height = selectedArea.style.height;
      mapDiv.style.width = selectedArea.style.width;
      mapDiv.style.backgroundColor = "green";
      mapDiv.style.opacity = "0.6";
      mapDiv.style.position = "absolute";

      selectedArea.style.display = "none";
      selectedArea.style.top = 0;
      selectedArea.style.left = 0;
      selectedArea.style.height = "200px";
      selectedArea.style.width = "250px";

      var acc = getCookie("uid");
      var room = roomNum.value;
      roomNum.value = "";

      var floor = document.getElementById("floorList").value;
      var top = mapDiv.style.top;
      var left = mapDiv.style.left;
      var height = mapDiv.style.height;
      var width = mapDiv.style.width;

      var db = firebase.database();
      var dbref = db.ref(acc + "/images/" + "floorData/" + floor + "/");
      dbref.push({
        room: room,
        top: top,
        left: left,
        height: height,
        width: width
      });
    }
  });

  setupDragElement(document.getElementById("addRoomDiv"));
  function setupDragElement(element) {
    var parentDimens = undefined;
    var thisEl = element;
    parentDimens = document.getElementById("mapImg").getBoundingClientRect();


    if (document.getElementById(element.id + "header")) {
      document.getElementById(element.id + "header").onmousedown = dragMouseDown;
    }
    else{
      element.onmousedown = dragMouseDown;
    }


    function dragMouseDown(e)
    {
      e = e || window.event;
      e.preventDefault();
      // get the mouse cursor position at startup:
      console.log("EVENT", e);
      //elementDrag(e);
      document.onmouseup = closeDragElement;
      // call a function whenever the cursor moves:
      document.onmousemove = elementDrag;

    }


    function closeDragElement(e) {
      //parentDimens = undefined;
      // stop moving when mouse button is released:
      document.onmouseup = null;
      document.onmousemove = null;

      //parentDimens = undefined;
    }

    function elementDrag(e) {
      console.log(e);
      e = e || window.event;
      e.preventDefault();
      console.log("attention: parentDimens is: ", parentDimens);

      var x = e.pageX - parentDimens.left;
      console.log("EVENT", e);
      console.log("PARENT", parentDimens);
      
      var xPct = (e.offsetX / parentDimens.width) * 100,
        yPct = (e.offsetY / parentDimens.height) * 100;

      console.log(xPct + " + " + yPct);
      thisEl.style.left = `${xPct}%`;
      thisEl.style.top = `${yPct}%`;

      
      //TODO: Make % equal to math calcs
    }
  }

  function getUserAsync() {
    return new Promise((resolve, reject) => {
      var response = fetch("/currentUser", {
        method: "GET",
        headers: {
          "Content-Type": "application/json"
        }
      })
        .then(resp => {
          if (resp.status == 200) {
            return resp.json();
          } else {
            reject(resp);
          }
        })
        .then(function(data) {
          console.log(data);
          currUser = data;

          resolve(data);
        })
        .catch(err => {
          reject(err);
        });
    });
    // expected output: 'resolved'
  }

  function loadFloor(floorName) {
    console.log(`Loading ${floorName}`);
    var storageRef = firebase.storage().ref();
    var acc = getCookie("uid");
    var ref = storageRef.child(acc + "/" + floorName);
    ref
      .getDownloadURL()
      .then(function(url) {
        // `url` is the download URL for 'images/stars.jpg'

        // This can be downloaded directly:
        var xhr = new XMLHttpRequest();
        xhr.responseType = "blob";
        xhr.onload = function(event) {
          var blob = xhr.response;
        };
        xhr.open("GET", url);
        xhr.send();

        // Or inserted into an <img> element:
        var img = document.getElementById("mapImg");
        img.src = url;
      })
      .catch(function(error) {
        console.log(error);
        console.log("there was an error getting images");
      });
  }

  loadFloorNames();

  function fetchNames() {
    var names = [];

    var isFirst = true;
    return new Promise((resolve, reject) => {
      var acc = getCookie("uid");

      db = firebase.database().ref(acc + "/images/" + "floors/");
      db.on("value", function(snapshot) {
        snapshot.forEach(function(childSnapshot) {
          var childData = childSnapshot.val();

          if (isFirst) {
            isFirst = false;
            loadFloor(childData.name);
          }

          names.push(childData.name);
        });

        resolve(names);
      });
    });
  }

  function loadFloorNames() {
    var list = document.getElementById("floorList");
    //var list2 = document.getElementById("floorDropdown");

    fetchNames()
      .then(names => {
        console.log("Promise result", names);
        for (var i = 0, l = names.length; i < l; i++) {
          var option = document.createElement("option");
          option.text = names[i];
          list.add(option);
        }
      })
      .catch(err => {
        console.error(err);
      });
  }
</script>
