<!DOCTYPE html>
<html>
<style>
  #mydiv {
    position: relative;
    z-index: 9;
    text-align: center;
    border: 3px solid #ebdd17;
    background-color: orange;
    resize: both;
    overflow: auto;
    opacity: 0.7;
  }

  #mydivheader {
    padding: 10px;
    cursor: move;
    z-index: 10;
    background-color: rgba(47, 255, 20, 0.5);
    color: black;
  }
</style>

<body>
  <div class="container-fluid">
    <div class="row">
      <div class="col-md-2">
        <select id="floorList" style="margin-bottom: 1em"></select>
        <button type="button" id="addRoomBTN" class="btn btn-success" style="margin-bottom: 1em">
          Add Room
        </button>


        <div class="form-group">
          <label for="addfloor">
            Room Number
          </label>
          <input class="form-control" id="roomNum" />
        </div>



        <button type="button" id="confRoomBTN" class="btn btn-success" style="margin-bottom: 1em">
          Confirm Room
        </button>
        <button type="button" id="confFloorBTN" class="btn btn-success" style="margin-bottom: 1em">
          Confirm Floor
        </button>
      </div>
      <div class="col-md-10">
        <div id="testContainer" class="testContainer" style="
				  position: absolute;
				  width: 55vw;
				  height:100%;
				  ">
          <img id="img" alt="Bootstrap Image Preview" style="position:absolute"
            src="https://i.redd.it/uo0u67glvlq01.jpg" />

          <div id="mydiv" style="height: 200px; width: 250px; display: none">
            <div id="mydivheader">Click here to move</div>
            <p>Move</p>
            <p>&</p>
            <p>Resize</p>
          </div>
        </div>
      </div>
    </div>
  </div>
</body>

</html>

<script>
  (() => {
    document.getElementById("floorList").addEventListener("change", function () {
      loadFloor(this.value);
    });
  })();


  document.getElementById("confFloorBTN").addEventListener("click", function () {
    window.location = "display"

  });

  document.getElementById("addRoomBTN").addEventListener("click", function () {
    var ele = document.getElementById("mydiv");
    if (ele.style.display == "block") {
      console.log("div already created");
      ele.style.display = "none";
      ele.style.top = 0;
      ele.style.left = 0;
      ele.style.height = "200px";
      ele.style.width = "250px";
    } else {
      ele.style.display = "block";
    }
  });

  document.getElementById("confRoomBTN").addEventListener("click", function () {
    var selectedArea = document.getElementById("mydiv");
    var roomNum = document.getElementById("roomNum");


    if (selectedArea.style.display == "none") {
      alert("Please first select your region with the add room button");
    }
    else if (roomNum.value == "") {
      alert("Please first enter in a room number");
    }
    else {
      var imgDiv = document.getElementById("testContainer");
      var testDiv = document.createElement("div");
      imgDiv.appendChild(testDiv);

      var t = document.createTextNode(roomNum.value);

      testDiv.appendChild(t);
      testDiv.style.textAlign = "center";
      testDiv.style.verticalAlign = "middle";
      testDiv.style.lineHeight = selectedArea.style.height;
      testDiv.style.fontSize = "200%";
      testDiv.style.color = "yellow";




      testDiv.style.top = selectedArea.style.top;
      testDiv.style.left = selectedArea.style.left;
      testDiv.style.height = selectedArea.style.height;
      testDiv.style.width = selectedArea.style.width;
      testDiv.style.backgroundColor = "green";
      testDiv.style.opacity = "0.6";
      testDiv.style.position = "absolute";


      selectedArea.style.display = "none";
      selectedArea.style.top = 0;
      selectedArea.style.left = 0;
      selectedArea.style.height = "200px";
      selectedArea.style.width = "250px";


      var acc = getCookie("uid");
      var room = roomNum.value;
      roomNum.value = "";

      var floor = document.getElementById("floorList").value;
      var top = testDiv.style.top;
      var left = testDiv.style.left;
      var height = testDiv.style.height;
      var width = testDiv.style.width;

      var db = firebase.database();
      var dbref = db.ref(acc + "/images/" + "floorData/" + floor + "/");
      dbref.push({ room: room, top: top, left: left, height: height, width: width });
    }
  });

  dragElement(document.getElementById("mydiv"));
  function dragElement(elmnt) {
    var pos1 = 0,
      pos2 = 0,
      pos3 = 0,
      pos4 = 0;
    if (document.getElementById(elmnt.id + "header")) {
      /* if present, the header is where you move the DIV from:*/
      document.getElementById(elmnt.id + "header").onmousedown = dragMouseDown;
    } else {
      /* otherwise, move the DIV from anywhere inside the DIV:*/
      elmnt.onmousedown = dragMouseDown;
    }

    function dragMouseDown(e) {
      e = e || window.event;
      e.preventDefault();
      // get the mouse cursor position at startup:
      pos3 = e.clientX;
      pos4 = e.clientY;
      document.onmouseup = closeDragElement;
      // call a function whenever the cursor moves:
      document.onmousemove = elementDrag;
    }

    function elementDrag(e) {
      e = e || window.event;
      e.preventDefault();
      // calculate the new cursor position:
      pos1 = pos3 - e.clientX;
      pos2 = pos4 - e.clientY;
      pos3 = e.clientX;
      pos4 = e.clientY;
      // set the element's new position:
      elmnt.style.top = elmnt.offsetTop - pos2 + "px";
      elmnt.style.left = elmnt.offsetLeft - pos1 + "px";
      console.log("top: " + elmnt.style.top);
      console.log("left: " + elmnt.style.left);
      console.log(
        "Dimensions: " + elmnt.style.height + " x " + elmnt.style.width
      );
    }

    function closeDragElement() {
      /* stop moving when mouse button is released:*/
      document.onmouseup = null;
      document.onmousemove = null;
    }
  }

  function getUserAsync() {
    return new Promise((resolve, reject) => {
      var response = fetch("/currentUser", {
        method: "GET",
        headers: {
          "Content-Type": "application/json"
        }
      })
        .then(resp => {
          if (resp.status == 200) {
            return resp.json();
          } else {
            reject(resp);
          }
        })
        .then(function (data) {
          console.log(data);
          currUser = data;

          resolve(data);
        })
        .catch(err => {
          reject(err);
        });
    });
    // expected output: 'resolved'
  }

  function loadFloor(floorName) {
    console.log(`Loading ${floorName}`);
    var storageRef = firebase.storage().ref();
    var acc = getCookie("uid");
    var ref = storageRef.child(acc + "/" + floorName);
    ref
      .getDownloadURL()
      .then(function (url) {
        // `url` is the download URL for 'images/stars.jpg'

        // This can be downloaded directly:
        var xhr = new XMLHttpRequest();
        xhr.responseType = "blob";
        xhr.onload = function (event) {
          var blob = xhr.response;
        };
        xhr.open("GET", url);
        xhr.send();

        // Or inserted into an <img> element:
        var img = document.getElementById("img");
        img.src = url;
      })
      .catch(function (error) {
        console.log(error);
        console.log("there was an error getting images");
      });
  }

  loadFloorNames();

  function fetchNames() {
    var names = [];

    var isFirst = true;
    return new Promise((resolve, reject) => {
      var acc = getCookie("uid");

      db = firebase.database().ref(acc + "/images/" + "floors/");
      db.on("value", function (snapshot) {
        snapshot.forEach(function (childSnapshot) {
          var childData = childSnapshot.val();

          if (isFirst) {
            isFirst = false;
            loadFloor(childData.name);
          }

          names.push(childData.name);
        });

        resolve(names);
      });
    });
  }

  function loadFloorNames() {
    var list = document.getElementById("floorList");
    //var list2 = document.getElementById("floorDropdown");

    fetchNames()
      .then(names => {
        console.log("Promise result", names);
        for (var i = 0, l = names.length; i < l; i++) {
          var option = document.createElement("option");
          option.text = names[i];
          list.add(option);
        }
      })
      .catch(err => {
        console.error(err);
      });
  }
</script>